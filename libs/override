function hookFile(file, old)
	local loaded, name = {}, fs.getName(file)
	old[name] = {}
	local ok, err = loadfile( file, loaded )
    if ok then
        local ok, err = pcall(ok)
        if not ok then
            loglib.fatal("Error loading hooks for '"..name.."':\n"..err)
            return false
        end
    else
        loglib.fatal("Error loading hooks for '"..name.."':\n"..err)
        return false
    end
    for k,v in pairs( _G[name] ) do
        if k ~= "_ENV" then
            old[name][k] = _G[name][k]
            if loaded[k] then
            	loglib.debug("Hooking function "..name.."."..k.."()")
            	_G[name][k] = function (...)
            		setfenv( loaded[k], _G )
           			loaded[k](old[name], ...)
            	end
            end
        end
    end  
    return true
end

function hook(dir, _OLD_ENV)
	local files = fs.list(dir)
	loglib.info("Loading hooks...")
	for i, file in pairs(files) do
		hookFile(dir..file, _OLD_ENV)
	end
end

function unhook(_OLD_ENV)
	loglib.info("Unloading hooks...")
	for k, v in pairs( _OLD_ENV ) do
		for n, c in pairs( _OLD_ENV[k] ) do
			if _G[k][n] ~= _OLD_ENV[k][n] then
				loglib.debug("Unhooking "..k.."."..n.."()")
				_G[k][n] = _OLD_ENV[k][n]
			end
		end
	end
end