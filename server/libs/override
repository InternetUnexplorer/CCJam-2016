function hook(dir, loadInto, copyFrom)
	local files = fs.list(dir)
	log.info("Hooking term environment...")
	for api, funcs in pairs( copyFrom ) do
		if fs.exists(dir..api) then
			log.debug("Transposing "..api.." API")
			local funcs = {}
			loadInto[api] = {}
			copyFrom[api] = copyFrom[api] or {}
			local ok, err = loadfile( dir..api, funcs )
			if ok then
				local ok, err = pcall(ok)
				if not ok then
					log.error("Error loading functions for '"..api.."':\n"..err)
					return false
				end
			else
				log.error("Error loading functions for '"..api.."':\n"..err)
				return false
			end
			for k, v in pairs( copyFrom[api] ) do
				--log.debug("Hooking function "..api.."."..k.."()")
				loadInto[api][k] = loadstring(string.dump(v))
				setfenv( loadInto[api][k], loadInto )
			end
			-- for k, v in pairs( funcs ) do
			-- 	if k ~= "_ENV" then
			-- 		log.debug("Hooking function "..api.."."..k.."()")
			-- 	end
			-- end
		end
	end
end